{"ast":null,"code":"import _initializerDefineProperty from \"/Users/erin_seoyul/Desktop/reactwithmobx/source-template/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/erin_seoyul/Desktop/reactwithmobx/source-template/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/erin_seoyul/Desktop/reactwithmobx/source-template/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _temp;\n\nimport { observable, action, makeAutoObservable, toJS } from 'mobx';\nlet TodoStore = (_class = (_temp = class TodoStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_todo\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_todos\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"setTodos\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"addTodos\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"selectTodo\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"updateTodo\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"deleteTodo\", _descriptor7, this);\n\n    makeAutoObservable(this);\n  }\n\n  get todos() {\n    return toJS(this._todos);\n  }\n\n  get todo() {\n    return this._todo;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_todo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"setTodos\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (name, value) => {\n      this._todo = { ...this._todo,\n        [name]: value\n      };\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"addTodos\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return todo => {\n      this._todos.push(todo);\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"selectTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return todo => {\n      //1 .선택된 todo\n      // 클릭한 todo를 todo{}에 넣어준다.\n      this._todo = todo;\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"updateTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      let selected = this._todos.find(todo => this._todo.id === todo.id);\n\n      selected.title = this._todo.title;\n      selected.date = this._todo.date;\n      this._todo = {};\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"deleteTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      let sele;\n\n      this._todos.indexOf();\n    };\n  }\n})), _class);\nexport default new TodoStore();","map":{"version":3,"sources":["/Users/erin_seoyul/Desktop/reactwithmobx/source-template/5.todo-mobx/src/stores/TodoStore.js"],"names":["observable","action","makeAutoObservable","toJS","TodoStore","constructor","todos","_todos","todo","_todo","name","value","push","selected","find","id","title","date","sele","indexOf"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,kBAA7B,EAAiDC,IAAjD,QAA6D,MAA7D;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AACdC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACZH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAOD,MAAII,KAAJ,GAAY;AACV,WAAOH,IAAI,CAAC,KAAKI,MAAN,CAAX;AACD;;AACD,MAAIC,IAAJ,GAAW;AACT,WAAO,KAAKC,KAAZ;AACD;;AAfa,C,+EAIbT,U;;;;;WACO,E;;0EAEPA,U;;;;;WACQ,E;;4EASRC,M;;;;;WACU,CAACS,IAAD,EAAOC,KAAP,KAAiB;AAC1B,WAAKF,KAAL,GAAa,EAAE,GAAG,KAAKA,KAAV;AAAiB,SAACC,IAAD,GAAQC;AAAzB,OAAb;AACD,K;;4EAEAV,M;;;;;WACWO,IAAD,IAAU;AACnB,WAAKD,MAAL,CAAYK,IAAZ,CAAiBJ,IAAjB;AACD,K;;8EAEAP,M;;;;;WACaO,IAAD,IAAU;AACrB;AACA;AACA,WAAKC,KAAL,GAAaD,IAAb;AACD,K;;8EAEAP,M;;;;;WACY,MAAM;AACjB,UAAIY,QAAQ,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAkBN,IAAD,IAAU,KAAKC,KAAL,CAAWM,EAAX,KAAkBP,IAAI,CAACO,EAAlD,CAAf;;AACAF,MAAAA,QAAQ,CAACG,KAAT,GAAiB,KAAKP,KAAL,CAAWO,KAA5B;AACAH,MAAAA,QAAQ,CAACI,IAAT,GAAgB,KAAKR,KAAL,CAAWQ,IAA3B;AACA,WAAKR,KAAL,GAAa,EAAb;AACD,K;;8EAEAR,M;;;;;WACY,MAAM;AACjB,UAAIiB,IAAJ;;AACA,WAAKX,MAAL,CAAYY,OAAZ;AACD,K;;;AAGH,eAAe,IAAIf,SAAJ,EAAf","sourcesContent":["import { observable, action, makeAutoObservable, toJS } from 'mobx';\n\nclass TodoStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  @observable\n  _todo = {};\n\n  @observable\n  _todos = [];\n\n  get todos() {\n    return toJS(this._todos);\n  }\n  get todo() {\n    return this._todo;\n  }\n\n  @action\n  setTodos = (name, value) => {\n    this._todo = { ...this._todo, [name]: value };\n  };\n\n  @action\n  addTodos = (todo) => {\n    this._todos.push(todo);\n  };\n\n  @action\n  selectTodo = (todo) => {\n    //1 .선택된 todo\n    // 클릭한 todo를 todo{}에 넣어준다.\n    this._todo = todo;\n  };\n\n  @action\n  updateTodo = () => {\n    let selected = this._todos.find((todo) => this._todo.id === todo.id);\n    selected.title = this._todo.title;\n    selected.date = this._todo.date;\n    this._todo = {};\n  };\n\n  @action\n  deleteTodo = () => {\n    let sele\n    this._todos.indexOf();\n  };\n}\n\nexport default new TodoStore();\n"]},"metadata":{},"sourceType":"module"}